{"version":3,"sources":["components/audio/FrequencyGraph.js","components/Audio.js","social.png","App.js","index.js"],"names":["FrequencyGraph","index","value","bg","percent","className","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","AudioContext","window","webkitAudioContext","Audio","props","toggleListening","state","listening","setState","startListening","navigator","mediaDevices","getUserMedia","audio","video","then","stream","audioContext","soundAllowed","audioStream","createMediaStreamSource","analyser","createAnalyser","fftSize","connect","bufferLength","frequencyBinCount","frequencyArray","Uint8Array","listen","newFrequencyArray","getByteFrequencyData","requestAnimationFrame","this","values","onClick","map","Component","App","maxWidth","src","image","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA+BeA,EA7BQ,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAQ3BC,EAAK,aACLF,EAAQ,IAAM,IAChBE,EAAK,aAEHF,EAAQ,IAAM,IAChBE,EAAK,cAGP,IAAMC,EAAkB,KAdpBF,EAAQ,IACFA,EAAQ,IAER,GAYV,OACE,qBAAKG,UAAU,gBAAf,SACE,qBAAKA,UAAS,uBAAkBF,GAAMG,KAAK,cAAcC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,EAAL,MAAmBK,gBAAeL,EAASM,gBAAeN,EAASO,gBAAc,WCjBxJC,EAAeC,OAAOD,cAAgBC,OAAOC,mBAE9BC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,gBAAkB,WACM,EAAKC,MAAnBC,UAEN,EAAKC,SAAS,CAAED,WAAW,KAE3B,EAAKC,SAAS,CAAED,WAAW,IAC3B,EAAKE,mBAlBU,EAsBnBA,eAAiB,WACfC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACvDC,MAAK,SAACC,GACL,EAAKC,aAAe,IAAIjB,EACxB,EAAKQ,SAAS,CAAEQ,WAChB,EAAKE,mBA3BQ,EA+BnBA,aAAe,WAAO,IACZF,EAAW,EAAKV,MAAhBU,OACFG,EAAc,EAAKF,aAAaG,wBAAyBJ,GAC/D,EAAKK,SAAW,EAAKJ,aAAaK,iBAGlC,EAAKD,SAASE,QAFE,GAGhBJ,EAAYK,QAAQ,EAAKH,UAEzB,IAAMI,EAAe,EAAKJ,SAASK,kBAC7BC,EAAiB,IAAIC,WAAWH,GACtC,EAAKjB,SAAS,CAAEmB,mBAChB,EAAKE,UA3CY,EA8CnBA,OAAS,WAAO,IAAD,EACyB,EAAKvB,MAAnCC,EADK,EACLA,UAAWoB,EADN,EACMA,eACnB,GAAIpB,EAAW,CACb,IAAMuB,EAAoB,IAAIF,WAAWD,GACzC,EAAKN,SAASU,qBAAqBD,GACnC,EAAKtB,SAAS,CAAEmB,eAAgBG,IAChCE,sBAAsB,EAAKH,UAjD7B,EAAKvB,MAAQ,CACXU,OAAQ,KACRT,WAAW,EACXoB,eAAgB,IAAIC,YAEtB,EAAKX,aAAe,KACpB,EAAKI,SAAW,KATC,E,qDAwDT,IAAD,EAC+BY,KAAK3B,MAAnCC,EADD,EACCA,UAAWoB,EADZ,EACYA,eACbO,EAAM,YAAQP,GAEpB,OACE,gCACE,qBAAKlC,UAAU,oBAAf,SACE,yBAAQA,UAAS,wBAAmBc,EAAY,aAAe,eAAiB4B,QAASF,KAAK5B,gBAA9F,UACGE,EAAY,OAAS,QADxB,kBAID2B,EAAOE,KAAI,SAAC9C,EAAOD,GAAR,OACV,cAAC,EAAD,CAA4BA,MAAOA,EAAOC,MAAOA,GAA5BD,a,GArEIgD,aCNpB,MAA0B,mCCmB1BC,EAfH,WACV,OACE,qBAAK7C,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKE,MAAO,CAAE4C,SAAU,SAAW9C,UAAU,YAAY+C,IAAKC,EAAOC,IAAI,oBAE3E,cAAC,EAAD,YCRVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c2601cbf.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst FrequencyGraph = ({ index, value }) => {\n  let ratio = 0;\n  if (value < 200) {\n    ratio = value / 200\n  } else {\n    ratio = 1\n  }\n\n  let bg = 'bg-success';\n  if (index % 2 === 1) {\n    bg = 'bg-danger'\n  }\n  if (index % 3 === 0) {\n    bg = 'bg-primary'\n  }\n\n  const percent = ratio * 100;\n  return (\n    <div className=\"progress my-1\">\n      <div className={`progress-bar ${bg}`} role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={percent} aria-valuemin={percent} aria-valuemax=\"100\"></div>\n    </div>\n  );\n}\n\nFrequencyGraph.propTypes = {\n  value: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n}\n\nexport default FrequencyGraph;\n","import { Component } from 'react';\n\nimport FrequencyGraph from './audio/FrequencyGraph';\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\n\nexport default class Audio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stream: null,\n      listening: false,\n      frequencyArray: new Uint8Array(),\n    };\n    this.audioContext = null;\n    this.analyser = null;\n  }\n\n  toggleListening = () => {\n    const { listening } = this.state;\n    if (listening) {\n      this.setState({ listening: false });\n    } else {\n      this.setState({ listening: true });\n      this.startListening();\n    }\n  }\n\n  startListening = () => {\n    navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n      .then((stream) => {\n        this.audioContext = new AudioContext();\n        this.setState({ stream });\n        this.soundAllowed();\n      });\n  }\n\n  soundAllowed = () => {\n    const { stream } = this.state;\n    const audioStream = this.audioContext.createMediaStreamSource( stream );\n    this.analyser = this.audioContext.createAnalyser();\n    const fftSize = 32;\n\n    this.analyser.fftSize = fftSize;\n    audioStream.connect(this.analyser);\n\n    const bufferLength = this.analyser.frequencyBinCount;\n    const frequencyArray = new Uint8Array(bufferLength);\n    this.setState({ frequencyArray });\n    this.listen();\n  }\n\n  listen = () => {\n    const { listening, frequencyArray } = this.state;\n    if (listening) {\n      const newFrequencyArray = new Uint8Array(frequencyArray);\n      this.analyser.getByteFrequencyData(newFrequencyArray);\n      this.setState({ frequencyArray: newFrequencyArray });\n      requestAnimationFrame(this.listen);\n    }\n  }\n\n  render() {\n    const { listening, frequencyArray } = this.state;\n    const values = [ ...frequencyArray ];\n\n    return (\n      <div>\n        <div className=\"d-grid gap-2 mb-5\">\n          <button className={`btn btn-block ${listening ? 'btn-danger' : 'btn-success'}`} onClick={this.toggleListening}>\n            {listening ? 'Stop' : 'Start'} Listening\n          </button>\n        </div>\n        {values.map((value, index) => (\n          <FrequencyGraph key={index} index={index} value={value} />\n        ))}\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/social.0557933e.png\";","import Audio from './components/Audio';\n\nimport image from './social.png';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col mt-5 p-3\">\n          <div className=\"text-center\">\n            <img style={{ maxWidth: '300px' }} className=\"img-fluid\" src={image} alt=\"An Audio Xmas\" />\n          </div>\n          <Audio />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}